@startuml EventFluss
title Eventfluss: TriggerD2 → evD2 → DiagnoseFinished (TestServer)

participant Main
participant PLCMonitor as PLC
participant EventBus as Bus
participant ReactionManager as RM
participant TestServer

Main -> PLC: construct & connect()
Main -> Bus: construct
Main -> RM: construct(PLC)
Main -> Bus: subscribe(evD2, RM, prio=4)
Main -> PLC: subscribeBool("TriggerD2", ns=1, …)
PLC -> TestServer: CreateSubscription + MonitoredItem(TriggerD2)

loop runtime
  Main -> PLC: runIterate(50)
  TestServer --> PLC: DataChange(TriggerD2=TRUE)
  activate PLC
  PLC -> Bus: post(evD2)
  deactivate PLC

  Main -> PLC: processPosted(16)\n(exekutiert ältere Jobs)
  Main -> Bus: process(16)
  activate Bus
  Bus -> RM: onMethod(evD2)
  activate RM
  RM -> PLC: post( writeBool(\"DiagnoseFinished\", TRUE) )
  deactivate RM
  deactivate Bus

  ' Job wird im nächsten Zyklus ausgeführt:
  Main -> PLC: runIterate(50)
  Main -> PLC: processPosted(16)
  activate PLC
  PLC -> TestServer: Write DiagnoseFinished=TRUE
  deactivate PLC
end
@enduml
